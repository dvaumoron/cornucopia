
load("hello.crn", "Hello")

Hello()

load("dvaumoron/sql.crn", "ExecerContext", "RowQueryerContext", "QueryerContext", "CRUD", "MultiConvertedResultQueryFunc", "ForeignKeyMethod")


def newModelFile():
    f = NewFile("model")
    f.HeaderComment("Generated from ../test.crn - do not edit.")
    return f

commonFile = newModelFile()

commonFile.Const().Id("timeout").Op("=").Qual("time", "Duration").Call(5).Op("*").Qual("time", "Second")

# interfaces allowing *sql.DB or *sql.Tx

ExecerContext(commonFile, "ExecerContext")

commonFile.Line()

RowQueryerContext(commonFile, "RowQueryerContext")

commonFile.Line()

QueryerContext(commonFile, "QueryerContext")

commonFile.Save("model/common.go")

execerContext=Id("ExecerContext")
rowQueryerContext = Id("RowQueryerContext")
queryerContext = Id("QueryerContext")

timeOutDuration = Id("timeout")

userFile = newModelFile()

userType, userBuilder = CRUD(
    userFile, "User", primaryKey="Login", fields={
        "Login": String(),
        "Firstname": String(),
        "Lastname": String(),
        "Email": String(),
    },
    timeOutDuration=timeOutDuration,
    execerContext=execerContext, rowQueryerContext=rowQueryerContext
)

userFile.Line()

messageFields={
    "Id": Int64(),
    "UserLogin": String(),
    "Content": String(),
}

messageFile = newModelFile()

messageType, messageBuilder = CRUD(
    messageFile, "Message", primaryKey="Id", fields=messageFields,
    timeOutDuration=timeOutDuration,
    execerContext=execerContext, rowQueryerContext=Id("RowQueryerContext")
)

messageFile.Line()

queryMessagesName = "getMessagesByUserLogin"

MultiConvertedResultQueryFunc(
    messageFile, queryMessagesName,
    query="select o.id, o.userLogin, o.content from messages as o where o.userLogin = :login;",
    timeOutDuration=timeOutDuration, poolType=queryerContext, inputTypes={"login": String()}, queryResultType=messageFields,
    converter=Id(messageBuilder), outputType=messageType,
)

ForeignKeyMethod(
    userFile, userType,
    methodName="GetMessages",
    functionName=queryMessagesName, foreignKey="Login",
    outputType=messageType, queryerContext=queryerContext,
)

userFile.Save("model/user.go")
messageFile.Save("model/message.go")
