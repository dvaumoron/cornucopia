
load("hello.crn", "Hello")

Hello()

load("dvaumoron/main.crn", "StructType", "MakeFunc")
load("dvaumoron/sql.crn", "ExecerContext", "RowQueryerContext", "ExecFunc", "ConvertedResultQueryFunc")

f = NewFile("model")
f.HeaderComment("Generated from ../test.crn - do not edit.")

f.Const().Id("timeout").Op("=").Qual("time", "Duration").Call(5).Op("*").Qual("time", "Second")

# interfaces allowing *sql.DB or *sql.Tx

ExecerContext(f, "ExecerContext")

f.Line()

RowQueryerContext(f, "RowQueryerContext")

f.Line()

userFields = {"Name": String(),"Email": String()}

StructType(f, "User", namedFields=userFields)

MakeFunc(f, "MakeUser", userFields, Id("User"))

f.Line()

ExecFunc(
    file=f, name="SaveUser", timeOutDuration=Id("timeout"),
    query="insert into users(name, email) values(:Name, :Email)",
    poolType=Id("ExecerContext"), inputTypes=userFields,
)

f.Line()

ConvertedResultQueryFunc(
    file=f, name="QueryUser", timeOutDuration=Id("timeout"),
    query="select u.name, u.email from user as u where u.name = :name;",
    poolType=Id("RowQueryerContext"), inputTypes={"name": String()}, queryResultType=userFields,
    converter=Id("MakeUser"), outputType=Id("User"),
)

f.Save("model/model.go")