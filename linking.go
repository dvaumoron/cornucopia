// This file is generated - do not edit.

package main

import starlark "go.starlark.net/starlark"

func init() {
	jenFileWrappedType = makeWrappedType("jenFile", starlark.NewBuiltin("HeaderComment", jenFile_HeaderComment), starlark.NewBuiltin("PackageComment", jenFile_PackageComment), starlark.NewBuiltin("Anon", jenFile_Anon), starlark.NewBuiltin("ImportAlias", jenFile_ImportAlias), starlark.NewBuiltin("ImportName", jenFile_ImportName), starlark.NewBuiltin("ImportNames", jenFile_ImportNames), starlark.NewBuiltin("Comment", jenFile_Comment), starlark.NewBuiltin("Const", jenFile_Const), starlark.NewBuiltin("Var", jenFile_Var), starlark.NewBuiltin("Type", jenFile_Type), starlark.NewBuiltin("Func", jenFile_Func), starlark.NewBuiltin("Line", jenFile_Line), starlark.NewBuiltin("Save", jenFile_Save))
	jenStatementWrappedType = makeWrappedType("jenStatement", starlark.NewBuiltin("Add", jenStatement_Add), starlark.NewBuiltin("Any", jenStatement_Any), starlark.NewBuiltin("Append", jenStatement_Append), starlark.NewBuiltin("Assert", jenStatement_Assert), starlark.NewBuiltin("Block", jenStatement_Block), starlark.NewBuiltin("Bool", jenStatement_Bool), starlark.NewBuiltin("Byte", jenStatement_Byte), starlark.NewBuiltin("Call", jenStatement_Call), starlark.NewBuiltin("Cap", jenStatement_Cap), starlark.NewBuiltin("Chan", jenStatement_Chan), starlark.NewBuiltin("Clone", jenStatement_Clone), starlark.NewBuiltin("Comment", jenStatement_Comment), starlark.NewBuiltin("Comparable", jenStatement_Comparable), starlark.NewBuiltin("Complex", jenStatement_Complex), starlark.NewBuiltin("Complex128", jenStatement_Complex128), starlark.NewBuiltin("Complex64", jenStatement_Complex64), starlark.NewBuiltin("Defs", jenStatement_Defs), starlark.NewBuiltin("Dot", jenStatement_Dot), starlark.NewBuiltin("Else", jenStatement_Else), starlark.NewBuiltin("Err", jenStatement_Err), starlark.NewBuiltin("Error", jenStatement_Error), starlark.NewBuiltin("Float32", jenStatement_Float32), starlark.NewBuiltin("Float64", jenStatement_Float64), starlark.NewBuiltin("Func", jenStatement_Func), starlark.NewBuiltin("Id", jenStatement_Id), starlark.NewBuiltin("Imag", jenStatement_Imag), starlark.NewBuiltin("Index", jenStatement_Index), starlark.NewBuiltin("Int", jenStatement_Int), starlark.NewBuiltin("Int16", jenStatement_Int16), starlark.NewBuiltin("Int32", jenStatement_Int32), starlark.NewBuiltin("Int64", jenStatement_Int64), starlark.NewBuiltin("Int8", jenStatement_Int8), starlark.NewBuiltin("Interface", jenStatement_Interface), starlark.NewBuiltin("Iota", jenStatement_Iota), starlark.NewBuiltin("Len", jenStatement_Len), starlark.NewBuiltin("Lit", jenStatement_Lit), starlark.NewBuiltin("LitByte", jenStatement_LitByte), starlark.NewBuiltin("LitRune", jenStatement_LitRune), starlark.NewBuiltin("Make", jenStatement_Make), starlark.NewBuiltin("Map", jenStatement_Map), starlark.NewBuiltin("Nil", jenStatement_Nil), starlark.NewBuiltin("Op", jenStatement_Op), starlark.NewBuiltin("Params", jenStatement_Params), starlark.NewBuiltin("Parens", jenStatement_Parens), starlark.NewBuiltin("Qual", jenStatement_Qual), starlark.NewBuiltin("Range", jenStatement_Range), starlark.NewBuiltin("Real", jenStatement_Real), starlark.NewBuiltin("Recover", jenStatement_Recover), starlark.NewBuiltin("Rune", jenStatement_Rune), starlark.NewBuiltin("String", jenStatement_String), starlark.NewBuiltin("Struct", jenStatement_Struct), starlark.NewBuiltin("Tag", jenStatement_Tag), starlark.NewBuiltin("Types", jenStatement_Types), starlark.NewBuiltin("Uint", jenStatement_Uint), starlark.NewBuiltin("Uint16", jenStatement_Uint16), starlark.NewBuiltin("Uint32", jenStatement_Uint32), starlark.NewBuiltin("Uint64", jenStatement_Uint64), starlark.NewBuiltin("Uint8", jenStatement_Uint8), starlark.NewBuiltin("Uintptr", jenStatement_Uintptr), starlark.NewBuiltin("Values", jenStatement_Values))
}

func initCornucopiaGlobals() {
	starlark.Universe["Any"] = starlark.NewBuiltin("Any", wrappedAny)
	starlark.Universe["Append"] = starlark.NewBuiltin("Append", wrappedAppend)
	starlark.Universe["Bool"] = starlark.NewBuiltin("Bool", wrappedBool)
	starlark.Universe["Break"] = starlark.NewBuiltin("Break", wrappedBreak)
	starlark.Universe["Byte"] = starlark.NewBuiltin("Byte", wrappedByte)
	starlark.Universe["Cap"] = starlark.NewBuiltin("Cap", wrappedCap)
	starlark.Universe["Case"] = starlark.NewBuiltin("Case", wrappedCase)
	starlark.Universe["Chan"] = starlark.NewBuiltin("Chan", wrappedChan)
	starlark.Universe["Close"] = starlark.NewBuiltin("Close", wrappedClose)
	starlark.Universe["Comment"] = starlark.NewBuiltin("Comment", wrappedComment)
	starlark.Universe["Comparable"] = starlark.NewBuiltin("Comparable", wrappedComparable)
	starlark.Universe["Complex"] = starlark.NewBuiltin("Complex", wrappedComplex)
	starlark.Universe["Complex128"] = starlark.NewBuiltin("Complex128", wrappedComplex128)
	starlark.Universe["Complex64"] = starlark.NewBuiltin("Complex64", wrappedComplex64)
	starlark.Universe["Continue"] = starlark.NewBuiltin("Continue", wrappedContinue)
	starlark.Universe["Copy"] = starlark.NewBuiltin("Copy", wrappedCopy)
	starlark.Universe["Default"] = starlark.NewBuiltin("Default", wrappedDefault)
	starlark.Universe["Defer"] = starlark.NewBuiltin("Defer", wrappedDefer)
	starlark.Universe["Delete"] = starlark.NewBuiltin("Delete", wrappedDelete)
	starlark.Universe["Empty"] = starlark.NewBuiltin("Empty", wrappedEmpty)
	starlark.Universe["Err"] = starlark.NewBuiltin("Err", wrappedErr)
	starlark.Universe["Error"] = starlark.NewBuiltin("Error", wrappedError)
	starlark.Universe["Fallthrough"] = starlark.NewBuiltin("Fallthrough", wrappedFallthrough)
	starlark.Universe["Float32"] = starlark.NewBuiltin("Float32", wrappedFloat32)
	starlark.Universe["Float64"] = starlark.NewBuiltin("Float64", wrappedFloat64)
	starlark.Universe["For"] = starlark.NewBuiltin("For", wrappedFor)
	starlark.Universe["Func"] = starlark.NewBuiltin("Func", wrappedFunc)
	starlark.Universe["Go"] = starlark.NewBuiltin("Go", wrappedGo)
	starlark.Universe["Goto"] = starlark.NewBuiltin("Goto", wrappedGoto)
	starlark.Universe["Id"] = starlark.NewBuiltin("Id", wrappedId)
	starlark.Universe["If"] = starlark.NewBuiltin("If", wrappedIf)
	starlark.Universe["Imag"] = starlark.NewBuiltin("Imag", wrappedImag)
	starlark.Universe["Index"] = starlark.NewBuiltin("Index", wrappedIndex)
	starlark.Universe["Int"] = starlark.NewBuiltin("Int", wrappedInt)
	starlark.Universe["Int16"] = starlark.NewBuiltin("Int16", wrappedInt16)
	starlark.Universe["Int32"] = starlark.NewBuiltin("Int32", wrappedInt32)
	starlark.Universe["Int64"] = starlark.NewBuiltin("Int64", wrappedInt64)
	starlark.Universe["Int8"] = starlark.NewBuiltin("Int8", wrappedInt8)
	starlark.Universe["Interface"] = starlark.NewBuiltin("Interface", wrappedInterface)
	starlark.Universe["Iota"] = starlark.NewBuiltin("Iota", wrappedIota)
	starlark.Universe["Len"] = starlark.NewBuiltin("Len", wrappedLen)
	starlark.Universe["Line"] = starlark.NewBuiltin("Line", wrappedLine)
	starlark.Universe["List"] = starlark.NewBuiltin("List", wrappedList)
	starlark.Universe["Lit"] = starlark.NewBuiltin("Lit", wrappedLit)
	starlark.Universe["LitByte"] = starlark.NewBuiltin("LitByte", wrappedLitByte)
	starlark.Universe["LitRune"] = starlark.NewBuiltin("LitRune", wrappedLitRune)
	starlark.Universe["Make"] = starlark.NewBuiltin("Make", wrappedMake)
	starlark.Universe["Map"] = starlark.NewBuiltin("Map", wrappedMap)
	starlark.Universe["NewFile"] = starlark.NewBuiltin("NewFile", wrappedNewFile)
	starlark.Universe["Nil"] = starlark.NewBuiltin("Nil", wrappedNil)
	starlark.Universe["Null"] = starlark.NewBuiltin("Null", wrappedNull)
	starlark.Universe["Op"] = starlark.NewBuiltin("Op", wrappedOp)
	starlark.Universe["Parens"] = starlark.NewBuiltin("Parens", wrappedParens)
	starlark.Universe["Qual"] = starlark.NewBuiltin("Qual", wrappedQual)
	starlark.Universe["Real"] = starlark.NewBuiltin("Real", wrappedReal)
	starlark.Universe["Recover"] = starlark.NewBuiltin("Recover", wrappedRecover)
	starlark.Universe["Return"] = starlark.NewBuiltin("Return", wrappedReturn)
	starlark.Universe["Rune"] = starlark.NewBuiltin("Rune", wrappedRune)
	starlark.Universe["Select"] = starlark.NewBuiltin("Select", wrappedSelect)
	starlark.Universe["String"] = starlark.NewBuiltin("String", wrappedString)
	starlark.Universe["Switch"] = starlark.NewBuiltin("Switch", wrappedSwitch)
	starlark.Universe["Uint"] = starlark.NewBuiltin("Uint", wrappedUint)
	starlark.Universe["Uint16"] = starlark.NewBuiltin("Uint16", wrappedUint16)
	starlark.Universe["Uint32"] = starlark.NewBuiltin("Uint32", wrappedUint32)
	starlark.Universe["Uint64"] = starlark.NewBuiltin("Uint64", wrappedUint64)
	starlark.Universe["Uint8"] = starlark.NewBuiltin("Uint8", wrappedUint8)
	starlark.Universe["Uintptr"] = starlark.NewBuiltin("Uintptr", wrappedUintptr)
	starlark.Universe["Union"] = starlark.NewBuiltin("Union", wrappedUnion)
	starlark.Universe["Values"] = starlark.NewBuiltin("Values", wrappedValues)
	starlark.Universe["Var"] = starlark.NewBuiltin("Var", wrappedVar)
}
